{"ast":null,"code":"var _jsxFileName = \"/Users/brendamenezes/Desktop/cocktails/setup/src/context.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('a');\n  const [cocktails, setCocktails] = useState([]);\n  /* useCallback to prevent infinite loop, build from scratch only when searchTerm changes*/\n\n  const fetchDrinks = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      const {\n        drinks\n      } = data;\n\n      if (drinks) {\n        const newCocktails = drinks.map(item => {\n          const {\n            idDrink,\n            strDrink,\n            strDrinkThumb,\n            strAlcoholic,\n            strGlass\n          } = item;\n          return {\n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass\n          };\n        });\n        setCocktails(newCocktails);\n      } else {\n        setCocktails([]);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchDrinks();\n  }, [searchTerm, fetchDrinks]);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      loading,\n      cocktails,\n      setSearchTerm\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, children);\n}; // make sure use\n\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["/Users/brendamenezes/Desktop/cocktails/setup/src/context.js"],"names":["React","useState","useContext","useEffect","useCallback","url","AppContext","createContext","AppProvider","children","loading","setLoading","searchTerm","setSearchTerm","cocktails","setCocktails","fetchDrinks","response","fetch","data","json","drinks","newCocktails","map","item","idDrink","strDrink","strDrinkThumb","strAlcoholic","strGlass","id","name","image","info","glass","error","console","log","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,GAAG,GAAG,2DAAZ;AACA,MAAMC,UAAU,GAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AAEF;;AACA,QAAMe,WAAW,GAAGZ,WAAW,CAAC,YAAY;AAC1CO,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,GAAI,GAAEO,UAAW,EAArB,CAA5B;AACA,YAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAM;AAACC,QAAAA;AAAD,UAAWF,IAAjB;;AACA,UAAIE,MAAJ,EAAY;AACV,cAAMC,YAAY,GAAGD,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAU;AACxC,gBAAM;AACJC,YAAAA,OADI;AAEJC,YAAAA,QAFI;AAGJC,YAAAA,aAHI;AAIJC,YAAAA,YAJI;AAKJC,YAAAA;AALI,cAMFL,IANJ;AAOA,iBAAO;AACLM,YAAAA,EAAE,EAACL,OADE;AAELM,YAAAA,IAAI,EAACL,QAFA;AAGLM,YAAAA,KAAK,EAACL,aAHD;AAIPM,YAAAA,IAAI,EAACL,YAJE;AAKPM,YAAAA,KAAK,EAACL;AALC,WAAP;AAOD,SAfoB,CAArB;AAgBAd,QAAAA,YAAY,CAACO,YAAD,CAAZ;AACD,OAlBD,MAkBO;AACLP,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;;AACDJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AAED,KA3BD,CA2BE,OAAOwB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAxB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAjC8B,EAiC7B,CAACC,UAAD,CAjC6B,CAA/B;AAkCAT,EAAAA,SAAS,CAAC,MAAK;AACfa,IAAAA,WAAW;AACV,GAFQ,EAEP,CAACJ,UAAD,EAAaI,WAAb,CAFO,CAAT;AAIE,sBACA,oBAAC,UAAD,CAAY,QAAZ;AACA,IAAA,KAAK,EAAE;AACLN,MAAAA,OADK;AAELI,MAAAA,SAFK;AAGLD,MAAAA;AAHK,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOCJ,QAPD,CADA;AAWD,CAvDD,C,CAwDA;;;AACA,OAAO,MAAM6B,gBAAgB,GAAG,MAAM;AACpC,SAAOpC,UAAU,CAACI,UAAD,CAAjB;AACD,CAFM;AAIP,SAASA,UAAT,EAAqBE,WAArB","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { useCallback } from 'react'\n\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('a');\n  const [cocktails, setCocktails] = useState([]);\n\n/* useCallback to prevent infinite loop, build from scratch only when searchTerm changes*/\nconst fetchDrinks = useCallback(async () => {\n  setLoading(true);\n  try {\n    const response = await fetch(`${url}${searchTerm}`)\n    const data = await response.json();\n    const {drinks} = data;\n    if (drinks) {\n      const newCocktails = drinks.map((item) => {\n        const {\n          idDrink,\n          strDrink,\n          strDrinkThumb,\n          strAlcoholic,\n          strGlass,\n        } = item\n        return {\n          id:idDrink,\n          name:strDrink,\n          image:strDrinkThumb,\n        info:strAlcoholic,\n        glass:strGlass,\n      }\n      })\n      setCocktails(newCocktails)\n    } else {\n      setCocktails([])\n    }\n    setLoading(false);\n\n  } catch (error) {\n    console.log(error)\n    setLoading(false)\n  }\n},[searchTerm])\nuseEffect(() =>{\nfetchDrinks()\n},[searchTerm, fetchDrinks])\n\n  return (\n  <AppContext.Provider \n  value={{\n    loading,\n    cocktails,\n    setSearchTerm,\n  }}\n  >\n  {children}\n  </AppContext.Provider>\n  )\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n"]},"metadata":{},"sourceType":"module"}